module ColorMatrix (
  input logic rst,
  input logic [8:0] board_in [0:7][0:7],           // Tablero de entrada
  output logic [3:0] board_out [0:7][0:7],          // Tablero de salida con bombas marcadas
);

  always @ (*) begin

	 for (int i = 0; i < 8; i = i + 1) begin
       for (int j = 0; j < 8; j = j + 1) begin
			 board_out[i][j] = 4'b0000;
			 if (board_in[i][j][8] == 1) begin
			   board_out[i][j] = 4'b1000;
			 end else if (board_in[i][j][4] == 1) begin
			   board_out[i][j] = 4'b1011;//--------------------------
			 end else if (board_in[i][j][7] == 1) begin
			   if (board_in[i][j][3:0] == 4'b0000) begin
				  board_out[i][j] = 4'b0111;//--------------------------
				end else if (board_in[i][j][3:0] == 4'b0001) begin
				  board_out[i][j] = 4'b0000;
				end else if (board_in[i][j][3:0] == 4'b0010) begin
				  board_out[i][j] = 4'b0001;
				end else if (board_in[i][j][3:0] == 4'b0011) begin
				  board_out[i][j] = 4'b0010;
				end else if (board_in[i][j][3:0] == 4'b0100) begin
				  board_out[i][j] = 4'b0011;
				end else if (board_in[i][j][3:0] == 4'b0101) begin
				  board_out[i][j] = 4'b1000;
				end else if (board_in[i][j][3:0] == 4'b0110) begin
				  board_out[i][j] = 4'b1010;
				end else if (board_in[i][j][3:0] == 4'b0111) begin
				  board_out[i][j] = 4'b0110;
				end
			 end else begin
			   board_out[i][j] = 4'b0111;
			 end
			 
      end
    end
  end	 
  /*
	         4'h0 : out_rgb <= 24'h88B0B1; // una bomba adyacente 		aqua gris
				4'h1 : out_rgb <= 24'h88B19F; // dos bombas adyacentes 		esmeralda gris
				4'h2 : out_rgb <= 24'h8DB188; // tres bombas adyacentes 	verde gris
				4'h3 : out_rgb <= 24'hA0B188; // cuatro bombas adyacentes 	lima gris
				4'h4 : out_rgb <= 24'hADB188; // cinco bombas adyacentes 	amarillo gris
				4'h5 : out_rgb <= 24'hB19D88; // seis bombas adyacentes 	naranja gris
				4'h6 : out_rgb <= 24'hB18888; // siete bombas adyacentes 	rojo gris
				4'h7 : out_rgb <= 24'hB1B1B1; // casilla limpia 			gris
				4'h8 : out_rgb <= 24'h818181; // casilla seleccionada 		gris oscuro
				4'h9 : out_rgb <= 24'h8E3030; // juego perdido 				rojo
				4'hA : out_rgb <= 24'h43C043; // juego ganado	 			verde
				default : out_rgb <= 24'h000000; // negro
	 
	 */
endmodule