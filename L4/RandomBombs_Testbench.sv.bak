module RandomBombs_Testbench;

  // Señales de entrada
  logic clk;
  logic rst;
  logic [7:0] num_bombs;

  // Señales de salida
  logic [7:0] bomb_locations;

  // Contador de tiempo y periodo del reloj
  int time_counter = 0;
  int clock_period = 5; // Período del reloj en unidades de tiempo

  // Instancia del módulo RandomBombs
  RandomBombs random_bombs (
    .clk(clk),
    .rst(rst),
    .num_bombs(num_bombs),
    .bomb_locations(bomb_locations)
  );

  // Generar un pulso de reloj
  always begin
    if (time_counter % (clock_period/2) == 0)
      clk = ~clk; // Invierte el reloj en el medio del período
    time_counter = time_counter + 1; // Avanzar el contador de tiempo
  end

  // Simulación de reset inicial
  initial begin
    clk = 0;
    rst = 1; // Activa el reset
    num_bombs = 8; // Número de bombas deseadas

    // Desactiva el reset después de 10 unidades de tiempo simuladas
    repeat (2) @(posedge clk) rst = 0;

    // Avanzar en el tiempo hasta que se alcance el tiempo deseado
    while (time_counter < 100) begin
      @(posedge clk);
      time_counter = time_counter + 1;
    end

    // Mostrar resultados
    $display("Bomb Locations: %h", bomb_locations);
    $finish; // Finalizar la simulación
  end

endmodule
